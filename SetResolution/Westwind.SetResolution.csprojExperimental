<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net472</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <Version>0.1.4</Version>
    <AssemblyName>SetResolution</AssemblyName>
    <Namespace>Westwind.SetResolution</Namespace>
    <ProductName>Set Windows Display Resolution</ProductName>
    <Title>SetResolution: Set Windows Display Resolution from Terminal</Title>
    <Description>
      Allows you set Windows display Resolution from the Terminal via simple commands. 
      
      Using this tool you can:

      * Set a specific resolution, frequency, bitness and rotation
      * List all available display modes
      * Create and use profiles for easy access
      * Supports multiple Monitors
    </Description>
    <Authors>Rick Strahl, West Wind Technologies</Authors>
    <Copyright>West Wind Technologies, 2022-2023</Copyright>
  </PropertyGroup>


  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <PropertyGroup Condition="'$(TargetFramework)' != 'net472'">
    <!-- dotnet tools must build to .NET Core -->
    <PackAsTool>true</PackAsTool>
    <PackageId>setresolution</PackageId>
    <ToolCommandName>setresolution</ToolCommandName>

    <PackageOutputPath>./nupkg</PackageOutputPath>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
</Project>
